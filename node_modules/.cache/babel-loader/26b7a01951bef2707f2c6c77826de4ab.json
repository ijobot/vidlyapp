{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Desktop\\\\React Apps\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: []\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = path => {\n      console.log(path);\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      currentPage,\n      pageSize,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in the database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          onPageChange: this.handlePageChange,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/josep/Desktop/React Apps/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","Movies","state","movies","pageSize","currentPage","genres","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","path","console","log","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genres: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (path) => {\r\n    console.log(path);\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      selectedGenre,\r\n      movies: allMovies,\r\n    } = this.state;\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n    const movies = paginate(filtered, currentPage, pageSize);\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <p>Showing {filtered.length} movies in the database</p>\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={filtered.length}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}